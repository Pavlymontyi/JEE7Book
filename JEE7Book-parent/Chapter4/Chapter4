
Java Persistence API (JPA) является предпочтительной технологией и частью Java EE 7

Общая инфа про JPA, бла-бла-бла, ничего интересного.

Единица сохраняемости (persistence-unit)
EntityManagerFactory emf = Persistence.createEntityManagerFactory("chapter04PU");
EntityManagerFactory передает имя единицы сохраняемости в качестве параметра; в данном случае
она имеет имя chapter04PU. Единица сохраняемости позволяет EntityManager узнать
тип базы данных для использования и параметры подключения, определенные в файле persistence.xml.

Этот файл, необходимый согласно спецификации JPA, важен, поскольку соединяет поставщика JPA
(которым в нашем случае выступает EclipseLink) с базой данных (Derby).
Он содержит всю информацию, необходимую для подключения к базе данных (URL-адрес,
JDBC-драйвер, сведения о пользователе, пароль), и сообщает поставщику режим
генерирования схемы базы данных (drop-and-create означает, что таблицы будут
удалены, а затем снова созданы). Элемент <provider> определяет поставщика посто-
янства, которым в нашем случае является EclipseLink. Единицы сохраняемости по-
зволяют узнать обо всех сущностях, которыми должен управлять менеджер сущ-
ностей. Здесь в теге <class> предусмотрена ссылка на сущность Book.

В нашем примере две единицы сохраняемости отличаются в том смысле, что chapter04PU использует работающую
базу данных Derby, а chapter04TestPU — ту, что располагается в оперативной памяти. Обе задействуют сценарий
inset.sql для ввода информации в базу данных во время выполнения